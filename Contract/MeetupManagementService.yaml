swagger: "2.0"
info:
  description: "Meetup Management Service API"
  version: "0.1.0"
  title: "Meetup Management Service API"
#  license:
#    name: "Apache 2.0"
#    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  contact:
   name: DotNetRu Server Contributors
   url: https://github.com/DotNetRu/Server
consumes:
- "application/json"
produces:
- "application/json"
securityDefinitions:
  basicAuth:
    type: basic
security: 
  - basicAuth: []
parameters:
  communityIdPathParam:
    name: "communityId"
    in: "path"
    required: true
    type: "string"
paths:
  /communities/{communityId}/meetups/draft:
    post:
      tags:
      - Meetup
      summary: "Create meetup draft"
      operationId: "CreateMeetupDraft"
      parameters:
      - in: "body"
        name: "meetupDraft"
        required: true
        schema:
          $ref: "#/definitions/CreateMeetupDraftParameters"          
      responses:
        201:
          description: "Draft was successfully created"
        401:
          $ref: "#/responses/Unauthorized"
        400:
          $ref: "#/responses/BadRequest"
        404:
          description: "Community not found"
        409:
          description: "Draft is already exists"
    parameters:
      - $ref: '#/parameters/communityIdPathParam'
      
  /communities/{communityId}/meetups/{meetupId}/draft:
    get:
      tags:
      - Meetup    
      summary: "Get meetup draft"
      operationId: "GetMeetupDraft"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/MeetupDraft"
        401:
          $ref: "#/responses/Unauthorized"          
        404:
          description: "Community or meetup not found"
    put:
      tags:
      - Meetup      
      summary: "Update meetup draft"
      operationId: "UpdateMeetupDraft"
      parameters:
      - in: "body"
        name: "updateMeetupDraftProperties"      
        required: true
        schema:
          $ref: "#/definitions/UpdateMeetupDraftParameters"          
      responses:
        204:
          description: "Draft was successfully updated"
        400:
          $ref: "#/responses/BadRequest"
        401:
          $ref: "#/responses/Unauthorized"          
        404:
          description: "Community or meetup not found"
    delete:
      tags:
      - Meetup
      summary: "Delete meetup draft"
      operationId: "DeleteMeetupDraft"
      responses:
        204:
          description: "Draft was successfully deleted"
        401:
          $ref: "#/responses/Unauthorized"          
        404:
          description: "Community or meetup not found"
    parameters:
    - $ref: '#/parameters/communityIdPathParam'
    - name: "meetupId"
      in: "path"
      required: true
      type: "string"
  /speakers/draft:
    post:
      tags:
      - Speaker
      summary: "Create speaker draft"
      operationId: "CreateSpeakerDraft"
      parameters:
      - name: "speakerDraft"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/CreateSpeakerDraftParameters"
      responses:
        201:
          description: "Draft was successfully created"
        401:
          $ref: "#/responses/Unauthorized"
        400:
          $ref: "#/responses/BadRequest"
        409:
          description: "Draft is already exists"
  /speakers/{speakerId}/draft:
    get:
      tags:
      - Speaker
      summary: "Get speaker draft"
      operationId: "GetSpeakerDrafts"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/SpeakerDraft"
        401:
          $ref: "#/responses/Unauthorized"          
        404:
          description: "Speaker not found"            
    put:
      tags:
      - Speaker
      summary: "Update speaker draft"
      operationId: "UpdateSpeakerDraft"
      parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/UpdateSpeakerDraftParameters"
      responses:
        204:
          description: "Draft was successfully updated"
        400:
          $ref: "#/responses/BadRequest"
        401:
          $ref: "#/responses/Unauthorized"          
        404:
          description: "Speaker not found"          
    delete:
      tags:
      - Speaker
      summary: "Delete speaker draft"
      operationId: "DeleteSpeakerDraft"
      responses:
        204:
          description: "Draft was successfully deleted"
        401:
          $ref: "#/responses/Unauthorized"          
        404:
          description: "Speaker not found"
    parameters:
    - name: "speakerId"
      in: "path"
      required: true
      type: "string"
  /venues/draft:
    post:
      tags:
      - Venue
      summary: "Create venue draft"
      operationId: "CreateVenueDraft"
      consumes: []
      parameters:
      - name: "venueDraft"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/CreateVenueDraftParameters"
      responses:
        201:
          description: "Draft was successfully created"
        401:
          $ref: "#/responses/Unauthorized"
        400:
          $ref: "#/responses/BadRequest"
        409:
          description: "Draft is already exists"   
  /venues/{venueId}/draft:
    get:
      tags:
      - Venue
      summary: "Get venue draft"
      operationId: "GetVenueDrafts"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/VenueDraft"
        401:
          $ref: "#/responses/Unauthorized"          
        404:
          description: "Venue not found"            
    put:
      tags:
      - Venue
      summary: "Update venue draft"
      operationId: "UpdateVenueDraft"
      consumes: []
      parameters:
      - name: "properties"
        in: "body"
        required: true
        schema:
            $ref: "#/definitions/UpdateVenueDraftParameters"
      responses:
        204:
          description: "Draft was successfully updated"
        400:
          $ref: "#/responses/BadRequest"
        401:
          $ref: "#/responses/Unauthorized"          
        404:
          description: "Venue not found"  
    delete:
      tags:
      - Venue
      summary: "Delete venue draft"
      operationId: "DeleteVenueDraft"
      responses:
        204:
          description: "Draft was successfully deleted"
        401:
          $ref: "#/responses/Unauthorized"          
        404:
          description: "Venue not found"
    parameters:
    - name: "venueId"
      in: "path"
      required: true
      type: "string"
  /talks/draft:
    post:
      tags:
      - Talk
      summary: "Create talk draft"
      description: "Create new talk draft."
      operationId: "CreateTalkDraft"
      consumes: []
      parameters:
      - name: "talkDraft"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/CreateTalkDraftParameters"
      responses:
        201:
          description: "Draft was successfully created"
        401:
          $ref: "#/responses/Unauthorized"
        400:
          $ref: "#/responses/BadRequest"
        409:
          description: "Draft is already exists"  
  /talk/{talkId}/draft:
    get:
      tags:
      - Talk
      summary: "Get talk draft"
      operationId: "GetTalkDraft"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/TalkDraft"
        401:
          $ref: "#/responses/Unauthorized"          
        404:
          description: "Talk not found"            
    put:
      tags:
      - Talk
      summary: "Update talk draft"
      operationId: "UpdateTalkDraft"
      consumes: []
      parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/UpdateTalkDraftParameters"
      responses:
        204:
          description: "Draft was successfully updated"
        400:
          $ref: "#/responses/BadRequest"
        401:
          $ref: "#/responses/Unauthorized"          
        404:
          description: "Talk not found"  
    delete:
      tags:
      - Talk
      summary: "Delete talk draft"
      operationId: "DeleteTalkDraft"
      responses:
        204:
          description: "Draft was successfully deleted"
        401:
          $ref: "#/responses/Unauthorized"          
        404:
          description: "Talk not found"
    parameters:
    - name: "talkId"
      in: "path"
      required: true
      type: "string"
  /friends/draft:
    post:
      tags:
      - Friend 
      summary: "Create friend draft"
      description: "Create new friend draft."
      operationId: "CreateFriendDraft"
      consumes: []
      parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/CreateFriendDraftParameters"
      responses:
        201:
          description: "Draft was successfully created"
        401:
          $ref: "#/responses/Unauthorized"
        400:
          $ref: "#/responses/BadRequest"
        409:
          description: "Draft is already exists" 
  /friends/{friendId}/draft:
    get:
      tags:
      - Friend
      summary: "Get friend draft"
      operationId: "GetFriendDraft"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/FriendDraft"
        401:
          $ref: "#/responses/Unauthorized"          
        404:
          description: "Friend not found"            
    put:
      tags:
      - Friend
      summary: "Update friend draft"
      operationId: "UpdateFriendDraft"
      consumes: []
      parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/UpdateFriendDraftParameters"
      responses:
        204:
          description: "Draft was successfully updated"
        400:
          $ref: "#/responses/BadRequest"
        401:
          $ref: "#/responses/Unauthorized"          
        404:
          description: "Friend not found"  
    delete:
      tags:
      - Friend
      summary: "Delete friend draft"
      operationId: "DeleteFriendDraft"
      parameters: []
      responses:
        204:
          description: "Draft was successfully deleted"
        401:
          $ref: "#/responses/Unauthorized"          
        404:
          description: "Speaker not found"
    parameters:
    - name: "friendId"
      in: "path"
      required: true
      type: "string"
# Descriptions of common responses
responses:
  NotFound:
    description: The specified resource was not found
  Unauthorized:
    description: Unauthorized
  BadRequest:
    description: Invalid request parameters
# Descriptions of common types    
definitions:
# Descriptions of unique identifiers
  UniqueIdentifier:
    type: object
    required:
    - Id
    properties:
      Id:
        type: string
        maxLength: 64
  NameProperty:
    type: object
    required:
    - Name
    properties:
      Name:
        type: string
        maxLength: 256
        
  CommunityIdentifier:
    required:
    - "CommunityId"
    properties:
      CommunityId:
        type: string
        maxLength: 64 
  VenueIdentifier:
    required:
    - "VenueId"
    properties:
      VenueId:
        type: string
        maxLength: 64
  FriendIdentifier:
    required:
    - "FriendId"
    properties:
      FriendId:
        type: string
        maxLength: 64 
  MeetupReference:
    type: "object"
    allOf:
      - $ref: "#/definitions/UniqueIdentifier"
      - $ref: "#/definitions/NameProperty"
      - $ref: "#/definitions/CommunityIdentifier" 
  TalkReference:
    allOf:
      - $ref: "#/definitions/UniqueIdentifier"            
      - required:
        - "Title"
        properties:
          Title:
            type: "string"          
  SpeakerReference:
    allOf:
      - $ref: "#/definitions/UniqueIdentifier"
      - required:
        - "FirstName"
        - "LastName"
        properties:
          FirstName:
            type: "string"
          LastName:
            type: "string"
  VenueReference:
    allOf:
    - $ref: "#/definitions/UniqueIdentifier"
    - $ref:  "#/definitions/NameProperty"
  FriendReference:
    allOf:
    - $ref: "#/definitions/UniqueIdentifier"
    - $ref:  "#/definitions/NameProperty"        
  # Description for meetup
  CreateMeetupDraftParameters:
    allOf:
      - $ref: "#/definitions/UniqueIdentifier"
      - $ref: "#/definitions/NameProperty"
    x-restlet:
      section: "DraftModels"
      
  UpdateMeetupDraftParameters:
    required:
    - "Name"
    properties:
      Name:
        type: string
        maxLength: 256
      VenueId:
        type: string
        maxLength: 64
      SpeakerIds:
        type: array
        items:
          type: string
          maxLength: 64          
      TalkIds:
        type: array
        items:
          type: string
          maxLength: 64   
      FriendIds:
        type: array
        items:
          type: string
          maxLength: 64   
         
  MeetupDraft:
    allOf:
    - $ref: "#/definitions/UniqueIdentifier"    
    - $ref: "#/definitions/NameProperty"
    - properties:
        Venue:
          $ref: "#/definitions/VenueReference"
        Speakers:
          type: array
          items:
            $ref: "#/definitions/SpeakerReference"
        Talks:
          type: array
          items:
            $ref: "#/definitions/TalkReference"
        Friends:
          type: array
          items:
            $ref: "#/definitions/FriendReference"
            

  # Description for talk
  CreateTalkDraftParameters:
    allOf:
      - $ref: "#/definitions/UniqueIdentifier"       
      - required:
        - "Title"
        properties:
          Title:
            type: "string"
            
  UpdateTalkDraftParameters:
    type: "object"
    required:
    - "Title"
    properties:
      Title:
        type: "string"
      Description:
        type: "string"
      SlidesUrl:
        type: "string"
      VideoUrl:
        type: "string"
      MeetupIds:
        type: array
        items:
          type: string
          maxLength: 64
      SpeakerIds:
        type: array
        items:
          type: string
          maxLength: 64
    x-restlet:
      section: "DraftModels"             
  TalkDraft:
    allOf:
    - $ref: "#/definitions/UniqueIdentifier"
    - required:
      - "Title"
      properties:
        Description:
          type: "string"
        SlidesUrl:
          type: "string"
        VideoUrl:
          type: "string"
        Meetups:
          type: "array"
          items:
            $ref: "#/definitions/MeetupReference"          
        Speakers:
          type: "array"
          items:
            $ref: "#/definitions/SpeakerReference"
        Friends:
          type: "array"
          items:
            $ref: "#/definitions/FriendReference"
        Venues:
          type: "array"
          items:
            $ref: "#/definitions/VenueReference"
    x-restlet:
      section: "DraftModels"        
    
#Description for friend
  CreateFriendDraftParameters:
    allOf:
    - $ref: "#/definitions/UniqueIdentifier"
    - $ref:  "#/definitions/NameProperty"
    x-restlet:
      section: "DraftModels" 
      
  UpdateFriendDraftParameters:
    type: "object"
    required:
    - "Name"
    properties:
      Name:
        type: "string"
        maxLength: 256
      Url:
        type: "string"
      Description:
        type: "string"
      MeetupIds:
        type: array
        items:
          type: string
          maxLength: 64
      SpeakerIds:
        type: array
        items:
          type: string
          maxLength: 64          
      TalkIds:
        type: array
        items:
          type: string
          maxLength: 64         
    x-restlet:
      section: "DraftModels"
      
  FriendDraft:
    allOf:
    - $ref: "#/definitions/UniqueIdentifier"
    - $ref:  "#/definitions/NameProperty"
    - properties:
        Name:
          type: "string"
          maxLength: 256
        Url:
          type: "string"
        Description:
          type: "string"
        Meetups:
          type: "array"
          items:
            $ref: "#/definitions/MeetupReference"
        Speakers:
          type: "array"
          items:
            $ref: "#/definitions/SpeakerReference"
        Talks:
          type: "array"
          items:
            $ref: "#/definitions/TalkReference"
        Venues:
          type: "array"
          items:
            $ref: "#/definitions/VenueReference"        
    x-restlet:
      section: "DraftModels"      
    
  CreateVenueDraftParameters:
    type: "object"
    allOf:
    - $ref: "#/definitions/UniqueIdentifier"
    - $ref:  "#/definitions/NameProperty"
    x-restlet:
      section: "DraftModels"

  UpdateVenueDraftParameters:
    type: "object"
    required:
    - "Name"
    properties:
      Name:
        type: "string"
        maxLength: 256
      Address:
        type: "string"
      MapUrl:
        type: "string"
        maxLength: 2000
      MeetupIds:
        type: array
        items:
          type: string
          maxLength: 64
      SpeakerIds:
        type: array
        items:
          type: string
          maxLength: 64          
      TalkIds:
        type: array
        items:
          type: string
          maxLength: 64          
    x-restlet:
      section: "DraftModels" 
      
  VenueDraft:
    allOf:
    - $ref: "#/definitions/UniqueIdentifier"
    - $ref:  "#/definitions/NameProperty"
    - properties:
        Address:
          type: "string"
        MapUrl:
          type: "string"
          maxLength: 2000
        Meetups:
          type: "array"
          items:
            $ref: "#/definitions/MeetupReference"
        Speakers:
          type: "array"
          items:
            $ref: "#/definitions/SpeakerReference"
        Talks:
          type: "array"
          items:
            $ref: "#/definitions/TalkReference"
        Friends:
          type: "array"
          items:
            $ref: "#/definitions/FriendReference"
    x-restlet:
      section: "DraftModels"         
     
  CreateSpeakerDraftParameters:
    allOf:
    - $ref: "#/definitions/UniqueIdentifier"
    - required:
      - "FirstName"
      - "LastName"
      properties:
        FirstName:
          type: "string"
        LastName:
          type: "string"
    x-restlet:
      section: "DraftModels"
      
  UpdateSpeakerDraftParameters:
    required:
    - "FirstName"
    - "LastName"
    properties:
      FirstName:
        type: "string"
      LastName:
        type: "string"
      CompanyName:
        type: "string"
      CompanyUrl:
        type: "string"
      Description:
        type: "string"
      BlogsUrl:
        type: "string"
      ContactsUrl:
        type: "string"
      TwitterUrl:
        type: "string"
      HabrUrl:
        type: "string"
      GitHubUrl:
        type: "string"
      MeetupIds:
        type: array
        items:
          type: string
          maxLength: 64
      TalkIds:
        type: array
        items:
          type: string
          maxLength: 64
      VenueIds:
        type: array
        items:
          type: string
          maxLength: 64
    x-restlet:
      section: "DraftModels"
      
  SpeakerDraft:
    allOf:
    - $ref: "#/definitions/UniqueIdentifier"
    - required:
      - "FirstName"
      - "LastName"
      properties:
        FirstName:
          type: "string"
        LastName:
          type: "string"
        CompanyName:
          type: "string"
        CompanyUrl:
          type: "string"
        Description:
          type: "string"
        BlogsUrl:
          type: "string"
        ContactsUrl:
          type: "string"
        TwitterUrl:
          type: "string"
        HabrUrl:
          type: "string"
        GitHubUrl:
          type: "string"
        Meetups:
          type: "array"
          items:
            $ref: "#/definitions/MeetupReference"        
        Venues:
          type: "array"
          items:
            $ref: "#/definitions/VenueReference"
        Talks:
          type: "array"
          items:
            $ref: "#/definitions/TalkReference"
        Friends:
          type: "array"
          items:
            $ref: "#/definitions/FriendReference"  
    x-restlet:
      section: "DraftModels"      

x-restlet:
  sections:
    DraftModels: {}